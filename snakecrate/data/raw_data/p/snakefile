# LOOK OUT! ITS A
#
#      ██████╗ 
#      ██╔══██╗
#      ██████╔╝
#      ██╔═══╝ 
#      ██║     
#      ╚═╝     
#                     
#
#██████╗     ██████╗     ███████╗    ██████╗                                                                        
#██╔══██╗    ██╔══██╗    ██╔════╝    ██╔══██╗                                                                       
#██████╔╝    ██████╔╝    █████╗      ██████╔╝                                                                       
#██╔═══╝     ██╔══██╗    ██╔══╝      ██╔═══╝                                                                        
#██║         ██║  ██║    ███████╗    ██║                                                                            
#╚═╝         ╚═╝  ╚═╝    ╚══════╝    ╚═╝       (Preprocessing)    
#
# SNAKEFILE!                                                                                           
# This literally only runs for the standard zip files                                                                                      

# the conda envronment is (dynduo)                                                                                             



# ███ set variables ███

#INPUT_DATA = "p_filenames.txt"
INPUT_DATA = "s5_p_filenames.txt"


#### generate sample list from file,
####   where the lines in the file contain full file names, e.g. "QQSSQS.tar"
FILES = [x.strip().split("\n")[0] for x in open(INPUT_DATA, 'r')]
SAMPLES = [x.strip().split(".fastq.gz")[0] for x in open(INPUT_DATA, 'r')]
#SAMPLES = [x.strip().split(".fastq.gz")[0] for x in SAMPLES]
#SAMPLES = SAMPLES[:1]

#software:
#snakemake
#fastp
#bbduk (in bbmap)
#   conda install -c bioconda bbmap
# khmer
#    conda install -y khmer


# ██████████ RULE ALL ██████████

rule all: 
    input: 
##   rule untar
#        expand("gzips/{sample}.fq.gz",  sample =SAMPLES)
##   rule fastp
#        expand("fastp/{sample}_{ext}.trim.fq.gz", sample =SAMPLES, ext = [1,2])
##   rule remove_host 
        expand("bbduk/{sample}.nohost.fq.gz", sample =SAMPLES)
##   rule khmer 
#        expand("abundtrim/{sample}.abundtrim.fq.gz", sample =SAMPLES)

# ██████████   RULES  ██████████
rule untar:
    output: 
    # in this snakefile, im leaving the extension as .fastq.gz, because I dont want to deal with renaming 
        "gzips/{sample}.fq.gz"
        
    #   no input, since the tar files are deleted because they are clogging up my harddrive 
    shell: """
            mv gzips/{wildcards.sample}.fastq.gz {output}

    """
#        old (vir) unzip technique, chuck?      
#        bzip2 -d {wildcards.sample}_2_sequence.txt.bz2
#        gzip -c  {wildcards.sample}_2_sequence.txt > {output.F2}
#        rm {wildcards.sample}_2_sequence.txt
#       rm     tars/{wildcards.sample}.tar



rule fastp:
    output:
        trim1="fastp/{sample}.trim.fq.gz", 
        html="fastp/reports/{sample}_fastp.html",
        json="fastp/reports/{sample}_fastp.json"

    input:
        gz1 = "gzips/{sample}.fq.gz",
    log:
        "logs/{sample}_fastp.log"  
    benchmark:
        "logs/{sample}_fastp.benchmark" 
    shell:
        """
        fastp -i {input.gz1} \
        -o {output.trim1} \
        -h {output.html} -j {output.json} > {log}
        """



rule remove_host:
    output:
        nohost_R1 = "bbduk/{sample}.nohost.fq.gz",
        human_R1  = "bbduk/{sample}.human.fq.gz",

    input:
        trim1 = "fastp/{sample}.trim.fq.gz",
        human = "../../../../../../../group/ctbrowngrp/non-microbial-reference/hg19_main_mask_ribo_animal_allplant_allfungus.fa.gz",
#        human = "../databases/hg19_main_mask_ribo_animal_allplant_allfungus.fa.gz",
#    threads = 4
#
# If trying to run locally, use
#        """
#        bbduk.sh\
#        -Xmx20g hdist=3 qhdist=3\
#        in={input.trim1} in2={input.trim2}\
#        out={output.nohost_R1} out2={output.nohost_R2}\
#        outm={output.human_R1} outm2={output.human_R2}\
#        k=31 ref={input.human}
#      """
    shell:
        """
        bbduk.sh -Xmx64g t=4 \
        in={input.trim1}\
        out={output.nohost_R1}\
        outm={output.human_R1}\
        k=31 ref={input.human}
        """

rule khmer: 
    output:"abundtrim/{sample}.abundtrim.fq.gz"
    input:
        R1="bbduk/{sample}_1.nohost.fq.gz",

    shell:
        """
        interleave-reads.py {input.R1} | \
        trim-low-abund.py --gzip -C 3 -Z 18 -M 20e9 -V - -o {output}
        """
