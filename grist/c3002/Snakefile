#LOOK OUT! ITS A
# Grist-sidestepping
# SNAKEFILE!
                                                                                                     
                                                                                                    
                               
# ███ set variables ███

INPUT_DATA = "samples_c3002.txt"

#   #generate sample list from file names text file
FILES = [x.strip().split("\n")[0] for x in open(INPUT_DATA, 'r')]

SAMPLES = [x.strip().split(".tar")[0] for x in open(INPUT_DATA, 'r')]
SAMPLES = [x.strip().split(".fastq.gz")[0] for x in SAMPLES]



# ██████████ RULE ALL ██████████
rule all: 
    input: 
##   rule uncompress_genome:
        expand("raw_data/zipped_data/{sample}_{ext}.bz2", sample =samples, ext = [1,2])
        #expand("raw_data/zipped_data/{sample}_1_sequence.txt.bz2", sample =samples),
        "data/raw_data/{FILES}",

# ██████████ RULES ██████████
#rule download_data: 
#    output: "data/raw_data/{FILES}"



# this rule could go through and append MGX or MVX to each file name, btw
rule uncompress_genome:
    output: 
    "data/zips/bzips/{sample}_1_sequence.txt.bz2",
    "data/zips/bzips/{sample}_2_sequence.txt.bz2" 
    input: "data/raw_data/tars/{FILES}"
    output: 
        "data/raw_data/bzips/{sample}_1_sequence.txt.bz2",
        "data/raw_data/bzips/{sample}_2_sequence.txt.bz2" 
    shell:
        "tar xvf {input} -C data/raw_data/bzips/"
